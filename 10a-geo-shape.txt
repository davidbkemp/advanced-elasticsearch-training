# Geo Shape:
# - Good for storing shapes and points
# - Supports multi-polygons
# - Supports queries like: "Does this shape over-lap this other shape"
# - Has no aggregation support
# - Stored as a "triangle mesh" in a "BKD tree"

DELETE /listings

# Declare a geo-shape type for the address.
PUT /listings
{
  "mappings": {
    "properties": {
      "address": {
        "type": "object",
        "properties": {
          "fullAddress": {"type": "text"},
          "geocode": {"type": "geo_shape"}
        }
      }
    }
  }
}


# Index example docs
# Using the geo-shape array format
# NOTE HOW THE LONGITUDE COMES BEFORE THE LATITUDE
PUT /listings/_doc/1
{
  "address": {
    "fullAddress": "511 Church St, Richmond, VIC 3121",
    "geocode": {
       "type" : "point",
        "coordinates" : [144.995, -37.829]
    }
  }
}

PUT /listings/_doc/2
{
  "address": {
    "fullAddress": "Kirribilli House, Kiribilli Ave, Kirribilli NSW 2061",
    "geocode": {
       "type" : "point",
        "coordinates" : [151.217, -33.851]
    }
  }
}


# Geo-shape query (polygon)
GET /listings/_search
{
  "query": {
    "geo_shape": {
      "address.geocode": {
        "shape": {
          "type": "polygon",
          "coordinates": [[[144,-37], [145,-37], [145, -40], [144,-37]]]
        },
        "relation": "within"
      }
    }
  }
}


# INTERSECTS - (default) Return all documents whose geo_shape field intersects the query geometry.
# DISJOINT - Return all documents whose geo_shape field has nothing in common with the query geometry.
# WITHIN - Return all documents whose geo_shape field is within the query geometry.
# CONTAINS - Return all documents whose geo_shape field contains the query geometry (since 7.5)
